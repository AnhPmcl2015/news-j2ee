package com.uit.entity;
// Generated May 20, 2019 1:05:38 AM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * AppUser generated by hbm2java
 */
@Entity
@Table(name = "app_user", catalog = "news_database", uniqueConstraints = @UniqueConstraint(columnNames = "username"))
public class AppUser implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4702167732990061942L;
	private Integer userId;
	private AppRole appRole;
	private String username;
	private Date createdDate;
	private String userPassword;
	private String fullname;
	private Date editTime;
	private Set<News> newsesForAuthorId = new HashSet<News>(0);
	private Set<News> newsesForAcceptanceUserId = new HashSet<News>(0);

	public AppUser() {
	}

	public AppUser(AppRole appRole, String username, String userPassword) {
		this.appRole = appRole;
		this.username = username;
		this.userPassword = userPassword;
	}

	public AppUser(AppRole appRole, String username, Date createdDate, String userPassword, String fullname,
			Date editTime, Set<News> newsesForAuthorId, Set<News> newsesForAcceptanceUserId) {
		this.appRole = appRole;
		this.username = username;
		this.createdDate = createdDate;
		this.userPassword = userPassword;
		this.fullname = fullname;
		this.editTime = editTime;
		this.newsesForAuthorId = newsesForAuthorId;
		this.newsesForAcceptanceUserId = newsesForAcceptanceUserId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "user_id", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role_id", nullable = false)
	public AppRole getAppRole() {
		return this.appRole;
	}

	public void setAppRole(AppRole appRole) {
		this.appRole = appRole;
	}

	@Column(name = "username", unique = true, nullable = false, length = 20)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "user_password", nullable = false, length = 65535)
	public String getUserPassword() {
		return this.userPassword;
	}

	public void setUserPassword(String userPassword) {
		this.userPassword = userPassword;
	}

	@Column(name = "fullname", length = 50)
	public String getFullname() {
		return this.fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "edit_time", length = 19)
	public Date getEditTime() {
		return this.editTime;
	}

	public void setEditTime(Date editTime) {
		this.editTime = editTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUserByAuthorId")
	public Set<News> getNewsesForAuthorId() {
		return this.newsesForAuthorId;
	}

	public void setNewsesForAuthorId(Set<News> newsesForAuthorId) {
		this.newsesForAuthorId = newsesForAuthorId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appUserByAcceptanceUserId")
	public Set<News> getNewsesForAcceptanceUserId() {
		return this.newsesForAcceptanceUserId;
	}

	public void setNewsesForAcceptanceUserId(Set<News> newsesForAcceptanceUserId) {
		this.newsesForAcceptanceUserId = newsesForAcceptanceUserId;
	}

}
